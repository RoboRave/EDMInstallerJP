/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edminstallerjp;

import java.awt.Button;
import java.awt.Checkbox;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import org.netbeans.lib.awtextra.AbsoluteLayout;
import org.netbeans.lib.awtextra.AbsoluteConstraints;

/**
 *
 * @author Zach
 */
public class TestFrame extends java.awt.Frame {

    
    public String InstallLocation="null";
    public String RunLocation = System.getProperty("user.dir");
    public File Source = new File(RunLocation + "/EDM.jar");
    public Path SourcePath = Source.toPath();
    public File Output = new File(InstallLocation+ "/mods/EDM.jar");
    public Path OutputPath = Output.toPath();
    
    public TestFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        FinderDialog = new JFileChooser();
        InstallButton = new JButton();
        EDMCheck = new Checkbox();
        Finder = new Button();
        InstallPath = new TextField();
        ForgeCheck = new Checkbox();

        FinderDialog.setApproveButtonText("Ok");
        FinderDialog.setApproveButtonToolTipText("");
        FinderDialog.setBackground(Color.white);
        FinderDialog.setCurrentDirectory(new File(System.getenv("appdata") + "/.minecraft"));
        FinderDialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        FinderDialog.setMinimumSize(new Dimension(500, 320));
        FinderDialog.setName("Finder"); // NOI18N
        FinderDialog.setPreferredSize(new Dimension(500, 320));

        setMinimumSize(new Dimension(300, 160));
        setPreferredSize(new Dimension(300, 160));
        setResizable(false);
        setSize(new Dimension(320, 160));
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(new AbsoluteLayout());

        InstallButton.setFont(new Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        InstallButton.setActionCommand("InstallButton");
        InstallButton.setContentAreaFilled(false);
        InstallButton.setFocusPainted(false);
        InstallButton.setLabel("Install");
        InstallButton.setMaximumSize(new Dimension(75, 20));
        InstallButton.setMinimumSize(new Dimension(75, 20));
        InstallButton.setName("InstallButton"); // NOI18N
        InstallButton.setPreferredSize(new Dimension(0, 0));
        InstallButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                InstallButtonActionPerformed(evt);
            }
        });
        add(InstallButton, new AbsoluteConstraints(20, 130, 75, 20));

        EDMCheck.setBackground(Color.white);
        EDMCheck.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        EDMCheck.setFont(new Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        EDMCheck.setLabel("Extra Diamonds Mod Version 4.1.0");
        EDMCheck.setMinimumSize(new Dimension(220, 20));
        EDMCheck.setName("EDMCheck"); // NOI18N
        EDMCheck.setPreferredSize(new Dimension(0, 0));
        EDMCheck.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                EDMCheckItemStateChanged(evt);
            }
        });
        add(EDMCheck, new AbsoluteConstraints(20, 100, 220, 20));

        Finder.setActionCommand("FinderButton");
        Finder.setLabel("...");
        Finder.setMinimumSize(new Dimension(25, 20));
        Finder.setName("Finder"); // NOI18N
        Finder.setPreferredSize(new Dimension(0, 0));
        Finder.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                FinderActionPerformed(evt);
            }
        });
        add(Finder, new AbsoluteConstraints(260, 60, 25, 20));

        InstallPath.setCursor(new Cursor(Cursor.TEXT_CURSOR));
        InstallPath.setEditable(false);
        InstallPath.setFont(new Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        InstallPath.setMinimumSize(new Dimension(240, 20));
        InstallPath.setName("InstallPath"); // NOI18N
        InstallPath.setPreferredSize(new Dimension(0, 0));
        InstallPath.setText("Find Path");
        add(InstallPath, new AbsoluteConstraints(20, 60, 230, 20));

        ForgeCheck.setFont(new Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        ForgeCheck.setLabel("MinecraftForge Version 1291");
        ForgeCheck.setMinimumSize(new Dimension(180, 20));
        ForgeCheck.setName("ForgeCheck"); // NOI18N
        ForgeCheck.setPreferredSize(new Dimension(0, 0));
        ForgeCheck.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                ForgeCheckItemStateChanged(evt);
            }
        });
        add(ForgeCheck, new AbsoluteConstraints(20, 80, 180, 20));
    }

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void InstallButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_InstallButtonActionPerformed
        // TODO add your handling code here:
        if (Json.es.getvalue()=="true")
        {
            System.out.println("It Worked!!!");
            if (!(new File(System.getProperty("user.dir") + "/EDM.jar")).exists())
            {
                DownloadFiles.download("http://addons-origin.cursecdn.com/files/2237/271/[1.7.10]EDM-4.1.0-Universal.jar", "EDM-4.1.0-Universal.jar");
            }
            else
            {
                System.out.println("Already Downloaded. Moving file...");
            }
            if (!(new File(InstallLocation + "/mods/EDM.jar")).exists())
            {
                try {
                    Files.move(SourcePath,OutputPath ,REPLACE_EXISTING);
                } catch (IOException ex) {
                    Logger.getLogger(TestFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                System.out.println("Mod is already installed");
            }
        }
        else
        {
            System.out.println("Oops!! Something went wrong!! " + Json.es.getname().toString() + " was not vaild or the config was tampered with, so no install happened.");
        }
        if (Json.config.getvalue()== "true")
        {
            DownloadFiles.download("http://files.minecraftforge.net/maven/net/minecraftforge/forge/1.7.10-10.13.2.1291/forge-1.7.10-10.13.2.1291-installer-win.exe", "forge.exe");
            if((new File(System.getProperty("user.dir") + "/forge.exe")).exists()){
                ProcessBuilder proc = new ProcessBuilder("forge.exe");
                try {
                    proc.start();
                    //System.Process.Start(System.getProperty("user.dir") + "/forge.exe");
                } catch (IOException ex) {
                    Logger.getLogger(TestFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
        {
            System.out.println("Oops!! Something went wrong!!");
        }
    }//GEN-LAST:event_InstallButtonActionPerformed

    private void EDMCheckItemStateChanged(ItemEvent evt) {//GEN-FIRST:event_EDMCheckItemStateChanged
        // TODO add your handling code here:
        if(EDMCheck.getState()==true){
            Json.es.setvalue("true");
            System.out.println(Json.es.getvalue());
            try {
                Json.instance.run();
            } catch (Exception ex) {
                Logger.getLogger(TestFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            Json.es.setvalue("false");
            System.out.println(Json.es.getvalue());
            try {
                Json.instance.run();
            } catch (Exception ex) {
                Logger.getLogger(TestFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_EDMCheckItemStateChanged

    private void FinderActionPerformed(ActionEvent evt) {//GEN-FIRST:event_FinderActionPerformed
        // TODO add your handling code here:
        FinderDialog.showDialog(this, "ok");
        InstallLocation= FinderDialog.getSelectedFile().toString();
        InstallPath.setText(InstallLocation);
    }//GEN-LAST:event_FinderActionPerformed

    private void ForgeCheckItemStateChanged(ItemEvent evt) {//GEN-FIRST:event_ForgeCheckItemStateChanged
        if (ForgeCheck.getState()==true)
        {
            Json.config.setvalue("true");
            Json.instance.run();
            System.out.println(Json.config.getvalue().toString());
        }
        else
        {
            Json.config.setvalue("false");
            Json.instance.run();
            System.out.println(Json.config.getvalue().toString());
        }
    }//GEN-LAST:event_ForgeCheckItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    Checkbox EDMCheck;
    Button Finder;
    JFileChooser FinderDialog;
    Checkbox ForgeCheck;
    public JButton InstallButton;
    TextField InstallPath;
    // End of variables declaration//GEN-END:variables
}
